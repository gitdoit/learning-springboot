多线程数据安全
    由于所有的数据都放在主存中，如果线程需要操作需要复制一份到线程的本地内存中进行操作，这时候如果多个线程对
同一份数据进行更新，那么则会出现数据紊乱。
    所以需要从三个方面防止这个问题
    1、原子性
        即一个线程对数据的更新操作，其他线程要么看到更新未开始，要么看到更新后的结果，不能看到更新过程。
        java中可以使用锁来实现这种功能，保证同一个变量同一时刻只能有一个线程访问。
    2、可见性
        如果一个线程对某个共享变量进行更新之后，后续访问该变量的线程可以读取到该更新的结果，那么就称这个线程对该共享变量的更新对其他线程可见，
        否则就称这个线程对该共享变量的更新对其他线程不可见。
        为什么会出现不可见呢？因为线程工作所需要的数据是要从主存中取的，再在本地内存中进行操作，然后更新到主存中。虽然保证了原子性，但操作结果也需要保证。
    3、有序性
        重排序是对内存访问操作的一种优化，他可以在不影响单线程程序正确性的前提下进行一定的调整，进而提高程序的性能
        但是对于多线程场景下，就可能产生一定的问题